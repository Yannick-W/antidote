apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${antidote_datacenter}
  labels:
    app: ${antidote_datacenter}
    type: antidote-deployment
spec:
  serviceName: ${antidote_datacenter}
  replicas: 1
  selector:
    matchLabels:
      app: ${antidote_datacenter}
      type: instance
  template:
    metadata:
      labels:
        app: ${antidote_datacenter}
        type: instance
    spec:
      terminationGracePeriodSeconds: 10
      
      containers:
      - name: antidote
        image: ${antidote_image} #192.168.2.106:5000/antidotedb-local-build:0.2.2
        imagePullPolicy: ${image_pull_policy} # Never, Always, ...
        
        ports:
        - containerPort: 4369
          name: erlang-port
        - containerPort: 3001
          name: metrics-port
        - containerPort: 8085
          name: antidote-1
        - containerPort: 8086
          name: antidote-2
        - containerPort: 8099
          name: antidote-3
        - containerPort: 9100
          name: antidote-rpc
        - containerPort: 8087
          name: antidote-pb
          
        startupProbe:
          tcpSocket:
            port: antidote-pb
          periodSeconds: 10
          successThreshold: 2
          failureThreshold: 60
          
        resources:
          limits:
            cpu: 1500m
            memory: 1500Mi
          requests:
            cpu: 1500m
            memory: 1000Mi
            
# cleanup??
#        lifecycle:
#          preStop:
#            exec:
#              command: 
#              - /bin/sh
#              - -c
#              - nodetool drain  # how in cassandra

        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            value: antidote@$(POD_IP)

        volumeMounts:
        - name: antidote-data
          mountPath: /antidote-data
          
  volumeClaimTemplates:
  - metadata:
      name: antidote-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ${storage_class_name}
      resources:
        requests:
          storage: 1000Mi
          



